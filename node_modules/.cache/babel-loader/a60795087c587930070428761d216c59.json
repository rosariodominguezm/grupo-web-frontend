{"ast":null,"code":"import _asyncToGenerator from \"/Users/rosariodominguezm/Desktop/Octavo Semestre/Tecnologi\\u0301as y aplicaciones web/grupo-grupo-web-1-frontend/simulador/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/rosariodominguezm/Desktop/Octavo Semestre/Tecnologi\\u0301as y aplicaciones web/grupo-grupo-web-1-frontend/simulador/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rosariodominguezm/Desktop/Octavo Semestre/Tecnologi\\u0301as y aplicaciones web/grupo-grupo-web-1-frontend/simulador/src/components/Simulador.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport Tile from './Tile';\nimport Tabla from './Tabla';\nimport React, { useRef, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport ReactTooltip from \"react-tooltip\";\nexport var SERVER_URL = process.env.REACT_APP_SERVER_URL;\nfunction Simulador() {\n  var secar = useRef();\n  var tostar = useRef();\n  var triturar = useRef();\n  var prensar = useRef();\n  var cantidad = useRef();\n  var tile = useRef();\n  // let current_id = 0;\n  var _useState = useState(100),\n    _useState2 = _slicedToArray(_useState, 2),\n    current_id = _useState2[0],\n    setCurrentId = _useState2[1]; // Recupero Cual es el current_id\n  useEffect(function () {\n    var data = window.localStorage.getItem(\"current_id\");\n    if (data !== null) setCurrentId(JSON.parse(data));\n  }, []);\n\n  //-------//\n  // POST, guardar simulador en base de datos y obtener producto creado\n  //-------//\n  var simulador = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var url, tiles, body;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"\".concat(SERVER_URL, \"/simulador\");\n              tiles = document.getElementsByClassName(\"Tile\");\n              body = {\n                secar: secar.current.value,\n                tostar: tostar.current.value,\n                triturar: triturar.current.value,\n                prensar: prensar.current.value,\n                cantidad: cantidad.current.value,\n                id: current_id\n              };\n              _context.next = 5;\n              return axios.post(url, body).then(function (response) {\n                // alert(` correcto!`);\n                tiles[0].innerHTML = response.data[\"product\"];\n                return 0;\n              }).catch(function (error) {\n                return alert(\"[\".concat(error.response.status, \"] \").concat(error.response.data));\n              });\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function simulador() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  //-------//\n  // GET\n  //-------//\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    data = _useState4[0],\n    setData = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var url, data;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setIsLoading(true);\n                url = \"\".concat(SERVER_URL, \"/simulador/\").concat(current_id);\n                _context2.next = 4;\n                return axios.get(url);\n              case 4:\n                data = _context2.sent;\n                setData(data.data);\n                setIsLoading(false);\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, [setData]);\n  function recargar() {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var url, data;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                setIsLoading(true);\n                url = \"\".concat(SERVER_URL, \"/simulador/\").concat(current_id);\n                _context3.next = 4;\n                return axios.get(url);\n              case 4:\n                data = _context3.sent;\n                setData(data.data);\n                setIsLoading(false);\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      return function fetchData() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"simulador\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Bienvenido al simulador de chocolate!\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"contenedor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, \"A continuaci\\xF3n encontrar\\xE1s c\\xF3mo hacer chocolate y una peque\\xF1a f\\xE1brica para realizarlo. En la f\\xE1brica deber\\xE1s ingresar una cantidad de frutos de cacao a usar y presionar lo que quieras hacer con ellos. Cuando te hayas decidido, presiona \\\"REALIZAR\\\" y ver\\xE1s el resultado obtenido. No te olvides de seguir la receta! \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"contenedor_simulacion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, \"F\\xE1brica de chocolate\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label_login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 37\n    }\n  }, \"Cantidad de cacao a utilizar \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"cant_cacao\",\n    ref: cantidad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 74\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"contenedor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 37\n    }\n  }, \"\\xBFQu\\xE9 procesos quieres aplicarle al cacao?\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"simular1\",\n    onClick: function onClick(e) {\n      return ChangeButtonClass(e.target);\n    },\n    value: \"false\",\n    ref: secar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 37\n    }\n  }, \" Secar \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"simular1\",\n    onClick: function onClick(e) {\n      return ChangeButtonClass(e.target);\n    },\n    value: \"false\",\n    ref: tostar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 37\n    }\n  }, \" Tostar \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"simular1\",\n    onClick: function onClick(e) {\n      return ChangeButtonClass(e.target);\n    },\n    value: \"false\",\n    ref: triturar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 37\n    }\n  }, \" Triturar\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"simular1\",\n    onClick: function onClick(e) {\n      return ChangeButtonClass(e.target);\n    },\n    value: \"false\",\n    ref: prensar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 37\n    }\n  }, \" Prensar \")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"button_enviar1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"botonenviar\",\n    className: \"result1\",\n    onClick: simulador,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 37\n    }\n  }, \" Realizar simulaci\\xF3n \"), /*#__PURE__*/React.createElement(ReactTooltip, {\n    id: \"botonenviar\",\n    place: \"top\",\n    effect: \"solid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 37\n    }\n  }, \"Tooltip for the register button\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"contenedor_receta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }, \" Cadena productiva del chocolate \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }, \"1. Se SECAN las habas de cacao para que se les vaya la humedad, disminuir amargor y aprovechar el aroma. \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, \"2. Se TUESTAN las habas de cacao para mejorar el aroma y poder triturarlas. \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, \"3. Se TRITURAN las habas de cacao en el proceso de molturaci\\xF3n para formar licor de cacao. \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, \"4. Se PRENSAN las habas de cacao para obtener manteca de cacao y torta de cacao, las cuales logran formar el CHOCOLATE!. \"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"contenedor_resultado\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }, \"Resultado simulaci\\xF3n \"), /*#__PURE__*/React.createElement(Tile, {\n    className: \"Tile\",\n    ref: tile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"script\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"tabla_simulaciones\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  }, \"Historial de Simulaciones\"))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"button_enviar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"result1\",\n    onClick: recargar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }, \" Recargar Historial \")))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"simulador\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, \"Bienvenido al simulador de chocolate!\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"contenedor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, \"A continuaci\\xF3n encontrar\\xE1s c\\xF3mo hacer chocolate y una peque\\xF1a f\\xE1brica para realizarlo. En la f\\xE1brica deber\\xE1s ingresar una cantidad de frutos de cacao a usar y presionar lo que quieras hacer con ellos. Cuando te hayas decidido, presiona \\\"REALIZAR\\\" y ver\\xE1s el resultado obtenido. No te olvides de seguir la receta! \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"contenedor_simulacion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  }, \"F\\xE1brica de chocolate\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label_login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 37\n    }\n  }, \"Cantidad de cacao a utilizar \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"cant_cacao\",\n    ref: cantidad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 74\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"contenedor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 37\n    }\n  }, \"\\xBFQu\\xE9 procesos quieres aplicarle al cacao?\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"simular1\",\n    onClick: function onClick(e) {\n      return ChangeButtonClass(e.target);\n    },\n    value: \"false\",\n    ref: secar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 37\n    }\n  }, \" Secar \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"simular1\",\n    onClick: function onClick(e) {\n      return ChangeButtonClass(e.target);\n    },\n    value: \"false\",\n    ref: tostar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 37\n    }\n  }, \" Tostar \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"simular1\",\n    onClick: function onClick(e) {\n      return ChangeButtonClass(e.target);\n    },\n    value: \"false\",\n    ref: triturar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 37\n    }\n  }, \" Triturar\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"simular1\",\n    onClick: function onClick(e) {\n      return ChangeButtonClass(e.target);\n    },\n    value: \"false\",\n    ref: prensar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 37\n    }\n  }, \" Prensar \")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"button_enviar1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"result1\",\n    onClick: simulador,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 37\n    }\n  }, \" Realizar simulaci\\xF3n \")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"contenedor_receta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 33\n    }\n  }, \" Cadena productiva del chocolate \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 37\n    }\n  }, \" Este es un proceso que va paso a paso, por ende, si te saltas un paso no podr\\xE1s crear productos. S\\xE9 cuidadoso con los botones que aprietes, ya que es acumulativo.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 37\n    }\n  }, \"1. Se SECAN las habas de cacao para que se les vaya la humedad, disminuir amargor y aprovechar el aroma -- Formas Cacao Seco. \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 37\n    }\n  }, \"2. Se TUESTAN las habas de cacao seco para mejorar el aroma y poder triturarlas. -- Formas Cacao Tostado\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 37\n    }\n  }, \"3. Se TRITURAN las habas de cacao tostadas en un proceso de molturaci\\xF3n para formar el licor de cacao.      -- Formas Cacao Triturado\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 37\n    }\n  }, \"4. Se PRENSAN las habas de cacao trituradas para obtener manteca de cacao y torta de cacao, las cuales logran formar el CHOCOLATE!.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"contenedor_resultado\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 33\n    }\n  }, \"Resultado simulaci\\xF3n \"), /*#__PURE__*/React.createElement(Tile, {\n    className: \"Tile\",\n    ref: tile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"script\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"tabla_simulaciones\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 37\n    }\n  }, \"Historial de Simulaciones\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"script\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Tabla, {\n    respuesta: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"button_enviar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"result1\",\n    onClick: recargar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }\n  }, \" Recargar Historial \")))));\n}\nvar ChangeButtonClass = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(boton) {\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (boton.className === 'simular1') {\n              boton.className = \"simular2\";\n              boton.value = 'true';\n            } else {\n              boton.className = \"simular1\";\n              boton.value = 'false';\n            }\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return function ChangeButtonClass(_x) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\n// const ChangeRealizar = async (boton) => {\n//     if (boton.className === 'result1') {\n//         boton.className = \"result2\";\n//     }\n//     else {\n//         boton.className = \"result1\";\n//     }\n// }\n\nexport default Simulador;","map":{"version":3,"names":["Tile","Tabla","React","useRef","useEffect","useState","axios","ReactTooltip","SERVER_URL","process","env","REACT_APP_SERVER_URL","Simulador","secar","tostar","triturar","prensar","cantidad","tile","current_id","setCurrentId","data","window","localStorage","getItem","JSON","parse","simulador","url","tiles","document","getElementsByClassName","body","current","value","id","post","then","response","innerHTML","catch","error","alert","status","setData","isLoading","setIsLoading","fetchData","get","recargar","e","ChangeButtonClass","target","boton","className"],"sources":["/Users/rosariodominguezm/Desktop/Octavo Semestre/Tecnologías y aplicaciones web/grupo-grupo-web-1-frontend/simulador/src/components/Simulador.js"],"sourcesContent":["import Tile from './Tile';\nimport Tabla from './Tabla';\nimport React, {useRef, useEffect }  from \"react\";\nimport { useState }  from \"react\";\nimport axios from \"axios\";\nimport ReactTooltip from \"react-tooltip\";\nexport const SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction Simulador(){\n\n    const secar = useRef();\n    const tostar = useRef();\n    const triturar = useRef();\n    const prensar = useRef();\n    const cantidad = useRef();\n    const tile = useRef();\n    // let current_id = 0;\n    const [current_id, setCurrentId] = useState(100);\n\n    // Recupero Cual es el current_id\n    useEffect(() => {\n        const data = window.localStorage.getItem(\"current_id\");\n        if  ( data !==null) setCurrentId(JSON.parse(data));\n    }, []);\n\n    //-------//\n    // POST, guardar simulador en base de datos y obtener producto creado\n    //-------//\n    const simulador = async () => {\n        const url = `${SERVER_URL}/simulador`;\n        const tiles = document.getElementsByClassName(\"Tile\");\n        \n\n        const body = {\n            secar: secar.current.value,\n            tostar: tostar.current.value,\n            triturar: triturar.current.value,\n            prensar: prensar.current.value,\n            cantidad: cantidad.current.value,\n            id: current_id,\n        };\n        await axios\n        .post(url, body)\n        .then((response) => {\n            // alert(` correcto!`);\n            tiles[0].innerHTML= response.data[\"product\"]\n            return 0\n            \n        })\n        .catch((error) =>\n            alert(`[${error.response.status}] ${error.response.data}`)\n        );\n    };\n\n    //-------//\n    // GET\n    //-------//\n\n    const [data, setData] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setIsLoading(true);\n            const url = `${SERVER_URL}/simulador/${current_id}`;\n            const data = await axios.get(url);\n            setData(data.data);\n            setIsLoading(false);\n        };\n        fetchData();\n    }, [setData]);\n\n    function recargar() {\n        const fetchData = async () => {\n            setIsLoading(true);\n            const url = `${SERVER_URL}/simulador/${current_id}`;\n            const data = await axios.get(url);\n            setData(data.data);\n            setIsLoading(false);\n        };\n        fetchData();\n\n    }\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <>\n                    <div class=\"simulador\">\n                        <br></br>\n                        <h2>Bienvenido al simulador de chocolate!</h2>\n                        <div id=\"contenedor\">\n                            <br></br>\n                            <p>A continuación encontrarás cómo hacer chocolate y una pequeña fábrica para realizarlo.\n                                En la fábrica deberás ingresar una cantidad de frutos de cacao a usar y presionar lo que quieras hacer con ellos.\n                                Cuando te hayas decidido, presiona \"REALIZAR\" y verás el resultado obtenido. No te olvides de seguir la receta! </p>\n                            <br></br>\n                        </div>\n                        <div className=\"row\">\n                            <div id=\"contenedor_simulacion\">\n                                <h3>Fábrica de chocolate</h3>\n                                <div className=\"label_login\">\n                                    <label >Cantidad de cacao a utilizar <input type=\"number\" id='cant_cacao' ref={cantidad}></input></label>\n                                </div>\n                                <br></br>\n                                <div id=\"contenedor\">\n                                    <p>¿Qué procesos quieres aplicarle al cacao?</p>\n                                </div>\n                                <div className=\"grid_container\">\n                                    <button className='simular1' onClick={e => ChangeButtonClass(e.target)} value='false' ref={secar}> Secar </button>\n                                    <button className='simular1' onClick={e => ChangeButtonClass(e.target)} value='false' ref={tostar}> Tostar </button>\n                                    <button className='simular1' onClick={e => ChangeButtonClass(e.target)} value='false' ref={triturar}> Triturar</button>\n                                    <button className='simular1' onClick={e => ChangeButtonClass(e.target)} value='false' ref={prensar}> Prensar </button>\n                                </div>\n\n                                <div class=\"button_enviar1\">\n                                    <button id=\"botonenviar\" className='result1' onClick={simulador}> Realizar simulación </button>\n                                    <ReactTooltip id=\"botonenviar\" place=\"top\" effect=\"solid\">\n                                        Tooltip for the register button\n                                    </ReactTooltip>\n                                </div>\n                                <br></br>\n                            </div>\n                            <div id=\"contenedor_receta\">\n                                <h3> Cadena productiva del chocolate </h3>\n                                <p>1. Se SECAN las habas de cacao para que se les vaya la humedad, disminuir amargor y aprovechar el aroma. </p>\n                                <p>2. Se TUESTAN las habas de cacao para mejorar el aroma y poder triturarlas. </p>\n                                <p>3. Se TRITURAN las habas de cacao en el proceso de molturación para formar licor de cacao. </p>\n                                <p>4. Se PRENSAN las habas de cacao para obtener manteca de cacao y torta de cacao, las cuales logran formar el CHOCOLATE!. </p>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div id=\"contenedor_resultado\">\n                                <h3>Resultado simulación </h3>\n                                <Tile className=\"Tile\" ref={tile} />\n                            </div>\n                        </div>\n                        <br></br>\n\n                        <script></script>\n                        <div className=\"row\">\n                            <div id=\"tabla_simulaciones\">\n                                <h2>Historial de Simulaciones</h2>\n\n                            </div>\n                        </div>\n                        <div class=\"button_enviar\">\n                            <button className='result1' onClick={recargar}> Recargar Historial </button>\n                        </div>\n                    </div>\n        \n                </>) : (\n                <>\n                    <div class=\"simulador\">\n                        <br></br>\n                        <h2>Bienvenido al simulador de chocolate!</h2>\n                        <div id=\"contenedor\">\n                            <br></br>\n                            <p>A continuación encontrarás cómo hacer chocolate y una pequeña fábrica para realizarlo.\n                                En la fábrica deberás ingresar una cantidad de frutos de cacao a usar y presionar lo que quieras hacer con ellos.\n                                Cuando te hayas decidido, presiona \"REALIZAR\" y verás el resultado obtenido. No te olvides de seguir la receta! </p>\n                            <br></br>\n                        </div>\n                        <div className=\"row\">\n                            <div id=\"contenedor_simulacion\">\n                                <h3>Fábrica de chocolate</h3>\n                                <div className=\"label_login\">\n                                    <label >Cantidad de cacao a utilizar <input type=\"number\" id='cant_cacao' ref={cantidad}></input></label>\n                                </div>\n                                <br></br>\n                                <div id=\"contenedor\">\n                                    <p>¿Qué procesos quieres aplicarle al cacao?</p>\n                                </div>\n                                <div className=\"grid_container\">\n                                    <button className='simular1' onClick={e => ChangeButtonClass(e.target)} value='false' ref={secar}> Secar </button>\n                                    <button className='simular1' onClick={e => ChangeButtonClass(e.target)} value='false' ref={tostar}> Tostar </button>\n                                    <button className='simular1' onClick={e => ChangeButtonClass(e.target)} value='false' ref={triturar}> Triturar</button>\n                                    <button className='simular1' onClick={e => ChangeButtonClass(e.target)} value='false' ref={prensar}> Prensar </button>\n                                </div>\n\n                                <div class=\"button_enviar1\">\n                                    <button className='result1' onClick={simulador}> Realizar simulación </button>\n                                </div>\n                                <br></br>\n                            </div>\n                            <div id=\"contenedor_receta\">\n                                <h3> Cadena productiva del chocolate </h3>\n                                    <p> Este es un proceso que va paso a paso, por ende, si te saltas un paso no podrás crear productos. Sé cuidadoso con los botones que aprietes, ya que es acumulativo.</p>\n                                    <p>1. Se SECAN las habas de cacao para que se les vaya la humedad, disminuir amargor y aprovechar el aroma -- Formas Cacao Seco. </p>\n                                    <p>2. Se TUESTAN las habas de cacao seco para mejorar el aroma y poder triturarlas. -- Formas Cacao Tostado</p>\n                                    <p>3. Se TRITURAN las habas de cacao tostadas en un proceso de molturación para formar el licor de cacao.      -- Formas Cacao Triturado</p>\n                                    <p>4. Se PRENSAN las habas de cacao trituradas para obtener manteca de cacao y torta de cacao, las cuales logran formar el CHOCOLATE!.</p>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div id=\"contenedor_resultado\">\n                                <h3>Resultado simulación </h3>\n                                <Tile className=\"Tile\" ref={tile} />\n                            </div>\n                        </div>\n                        <script></script>\n                        <div className=\"row\">\n                            <div id=\"tabla_simulaciones\">\n                                    <h2>Historial de Simulaciones</h2>\n                                    <br></br>\n                                    <br></br>\n                                    <br></br>\n                                    <br></br>\n                                    <script>\n                                    </script>\n                                    \n                                     {/* <h2>{JSON.stringify(data)}</h2> */}\n                                    {/* <h2>{JSON.stringify(data['1'].product)}</h2> */}\n                                    <Tabla respuesta={data}/>\n                                    {/* <h2>{ JSON.stringify(data['1'].product)}</h2> */}\n                                </div>\n                            </div>\n                        <div class=\"button_enviar\">\n                            <button className='result1' onClick={recargar}> Recargar Historial </button>\n                        </div>\n                    </div>\n        \n                </>\n                    \n            )}\n        </React.Fragment>\n    );\n}\n\nconst ChangeButtonClass = async (boton) => {\n    if (boton.className === 'simular1') {\n        boton.className = \"simular2\";\n        boton.value = 'true';\n    }\n    else {\n        boton.className = \"simular1\";\n        boton.value = 'false';\n    }\n    \n}\n\n// const ChangeRealizar = async (boton) => {\n//     if (boton.className === 'result1') {\n//         boton.className = \"result2\";\n//     }\n//     else {\n//         boton.className = \"result1\";\n//     }\n// }\n\nexport default Simulador;"],"mappings":"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"},"metadata":{},"sourceType":"module"}