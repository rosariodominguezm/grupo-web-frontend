{"ast":null,"code":"import _defineProperty from \"/Users/rosariodominguezm/Desktop/Octavo Semestre/Tecnologi\\u0301as y aplicaciones web/grupo-grupo-web-1-frontend/simulador/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _readOnlyError from \"/Users/rosariodominguezm/Desktop/Octavo Semestre/Tecnologi\\u0301as y aplicaciones web/grupo-grupo-web-1-frontend/simulador/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nimport _objectSpread from \"/Users/rosariodominguezm/Desktop/Octavo Semestre/Tecnologi\\u0301as y aplicaciones web/grupo-grupo-web-1-frontend/simulador/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/rosariodominguezm/Desktop/Octavo Semestre/Tecnologi\\u0301as y aplicaciones web/grupo-grupo-web-1-frontend/simulador/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from \"react\";\nimport { emailValidator, password2Validator, confirmPasswordValidator, origenValidator, nameValidator } from \"../components/Validators.js\";\nvar touchErrors = function touchErrors(errors) {\n  return Object.entries(errors).reduce(function (acc, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      field = _ref2[0],\n      fieldError = _ref2[1];\n    acc[field] = _objectSpread({}, fieldError, {\n      dirty: true\n    });\n    return acc;\n  }, {});\n};\nexport var useRegisterFormValidator = function useRegisterFormValidator(form) {\n  var _useState = useState({\n      mail: {\n        dirty: false,\n        error: false,\n        message: \"\"\n      },\n      password1: {\n        dirty: false,\n        error: false,\n        message: \"\"\n      },\n      password2: {\n        dirty: false,\n        error: false,\n        message: \"\"\n      }\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    errors = _useState2[0],\n    setErrors = _useState2[1];\n  var validateForm = function validateForm(_ref3) {\n    var form = _ref3.form,\n      field = _ref3.field,\n      errors = _ref3.errors,\n      _ref3$forceTouchError = _ref3.forceTouchErrors,\n      forceTouchErrors = _ref3$forceTouchError === void 0 ? false : _ref3$forceTouchError;\n    var isValid = true;\n\n    // Create a deep copy of the errors\n    var nextErrors = JSON.parse(JSON.stringify(errors));\n\n    // Force validate all the fields\n    if (forceTouchErrors) {\n      touchErrors(errors), _readOnlyError(\"nextErrors\");\n    }\n    var mail = form.mail,\n      password1 = form.password1,\n      password2 = form.password2;\n    if (nextErrors.mail.dirty && (field ? field === \"mail\" : true)) {\n      var mailMessage = emailValidator(mail, form);\n      nextErrors.mail.error = !!mailMessage;\n      nextErrors.mail.message = mailMessage;\n      if (!!mailMessage) isValid = false;\n    }\n    if (nextErrors.password.dirty && (field ? field === \"password1\" : true)) {\n      var passwordMessage = password2Validator(password1, form);\n      nextErrors.password1.error = !!passwordMessage;\n      nextErrors.password1.message = passwordMessage;\n      if (!!passwordMessage) isValid = false;\n    }\n    if (nextErrors.confirmPassword.dirty && (field ? field === \"password2\" : true)) {\n      var confirmPasswordMessage = confirmPasswordValidator(password2, form);\n      nextErrors.password2.error = !!confirmPasswordMessage;\n      nextErrors.password2.message = confirmPasswordMessage;\n      if (!!confirmPasswordMessage) isValid = false;\n    }\n    setErrors(nextErrors);\n    return {\n      isValid: isValid,\n      errors: nextErrors\n    };\n  };\n  var onBlurField = function onBlurField(e) {\n    var field = e.target.name;\n    var fieldError = errors[field];\n    if (fieldError.dirty) return;\n    var updatedErrors = _objectSpread({}, errors, _defineProperty({}, field, _objectSpread({}, errors[field], {\n      dirty: true\n    })));\n    validateForm({\n      form: form,\n      field: field,\n      errors: updatedErrors\n    });\n  };\n  return {\n    validateForm: validateForm,\n    onBlurField: onBlurField,\n    errors: errors\n  };\n};","map":{"version":3,"names":["useState","emailValidator","password2Validator","confirmPasswordValidator","origenValidator","nameValidator","touchErrors","errors","Object","entries","reduce","acc","field","fieldError","dirty","useRegisterFormValidator","form","mail","error","message","password1","password2","setErrors","validateForm","forceTouchErrors","isValid","nextErrors","JSON","parse","stringify","mailMessage","password","passwordMessage","confirmPassword","confirmPasswordMessage","onBlurField","e","target","name","updatedErrors"],"sources":["/Users/rosariodominguezm/Desktop/Octavo Semestre/Tecnologías y aplicaciones web/grupo-grupo-web-1-frontend/simulador/src/hooks/useRegisterFormValidator.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport {\n  emailValidator,\n  password2Validator,\n  confirmPasswordValidator,\n   origenValidator,\n    nameValidator\n\n\n} from \"../components/Validators.js\";\n\nconst touchErrors = errors => {\n  return Object.entries(errors).reduce((acc, [field, fieldError]) => {\n    acc[field] = {\n      ...fieldError,\n      dirty: true,\n    };\n    return acc;\n  }, {});\n};\n\nexport const useRegisterFormValidator = form => {\n  const [errors, setErrors] = useState({\n    mail: {\n      dirty: false,\n      error: false,\n      message: \"\",\n    },\n    password1: {\n      dirty: false,\n      error: false,\n      message: \"\",\n    },\n    password2: {\n        dirty: false,\n        error: false,\n        message: \"\",\n      },\n\n  });\n\n  const validateForm = ({ form, field, errors, forceTouchErrors = false }) => {\n    let isValid = true;\n\n    // Create a deep copy of the errors\n    const nextErrors = JSON.parse(JSON.stringify(errors));\n\n    // Force validate all the fields\n    if (forceTouchErrors) {\n      nextErrors = touchErrors(errors);\n    }\n\n    const { mail, password1, password2 } = form;\n\n    if (nextErrors.mail.dirty && (field ? field === \"mail\" : true)) {\n      const mailMessage = emailValidator(mail, form);\n      nextErrors.mail.error = !!mailMessage;\n      nextErrors.mail.message = mailMessage;\n      if (!!mailMessage) isValid = false;\n    }\n\n    if (nextErrors.password.dirty && (field ? field === \"password1\" : true)) {\n      const passwordMessage = password2Validator(password1, form);\n      nextErrors.password1.error = !!passwordMessage;\n      nextErrors.password1.message = passwordMessage;\n      if (!!passwordMessage) isValid = false;\n    }\n\n    if (\n        nextErrors.confirmPassword.dirty &&\n        (field ? field === \"password2\" : true)\n      ) {\n        const confirmPasswordMessage = confirmPasswordValidator(\n          password2,\n          form\n        );\n        nextErrors.password2.error = !!confirmPasswordMessage;\n        nextErrors.password2.message = confirmPasswordMessage;\n        if (!!confirmPasswordMessage) isValid = false;\n      }\n\n    setErrors(nextErrors);\n\n    return {\n      isValid,\n      errors: nextErrors,\n    };\n  };\n\n  const onBlurField = e => {\n    const field = e.target.name;\n    const fieldError = errors[field];\n    if (fieldError.dirty) return;\n\n    const updatedErrors = {\n      ...errors,\n      [field]: {\n        ...errors[field],\n        dirty: true,\n      },\n    };\n\n    validateForm({ form, field, errors: updatedErrors });\n  };\n\n  return {\n    validateForm,\n    onBlurField,\n    errors,\n  };\n};\n\n \n\n "],"mappings":"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"},"metadata":{},"sourceType":"module"}