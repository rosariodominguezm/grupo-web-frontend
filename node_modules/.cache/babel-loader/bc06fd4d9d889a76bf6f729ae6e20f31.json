{"ast":null,"code":"export var emailValidator = function emailValidator(mail) {\n  if (!mail) {\n    return \"Email is required\";\n  } else if (!new RegExp(/\\S+@\\S+\\.\\S+/).test(mail)) {\n    return \"Incorrect email format\";\n  }\n  return \"\";\n};\nexport var passwordValidator = function passwordValidator(password) {\n  if (!password) {\n    return \"Password is required\";\n  } else if (password.length < 6) {\n    return \"Password must have a minimum 6 characters\";\n  }\n  return \"\";\n};\nexport var confirmPasswordValidator = function confirmPasswordValidator(password, form) {\n  if (!confirmPassword) {\n    return \"Confirm password is required\";\n  } else if (confirmPassword.length < 8) {\n    return \"Confirm password must have a minimum 8 characters\";\n  } else if (confirmPassword !== form.password) {\n    return \"Passwords do not match\";\n  }\n  return \"\";\n};","map":{"version":3,"names":["emailValidator","mail","RegExp","test","passwordValidator","password","length","confirmPasswordValidator","form","confirmPassword"],"sources":["/Users/rosariodominguezm/Desktop/Octavo Semestre/Tecnologías y aplicaciones web/grupo-grupo-web-1-frontend/simulador/src/components/Validators.js"],"sourcesContent":["\nexport const emailValidator = mail => {\n    if (!mail) {\n      return \"Email is required\";\n    } else if (!new RegExp(/\\S+@\\S+\\.\\S+/).test(mail)) {\n      return \"Incorrect email format\";\n    }\n    return \"\";\n  };\n  \n  export const passwordValidator = password => {\n    if (!password) {\n      return \"Password is required\";\n    } else if (password.length < 6) {\n      return \"Password must have a minimum 6 characters\";\n    }\n    return \"\";\n  };\n\n\n  export const confirmPasswordValidator = (password, form) => {\n    if (!confirmPassword) {\n      return \"Confirm password is required\";\n    } else if (confirmPassword.length < 8) {\n      return \"Confirm password must have a minimum 8 characters\";\n    } else if (confirmPassword !== form.password) {\n      return \"Passwords do not match\";\n    }\n    return \"\";\n  };"],"mappings":"AACA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAc,CAAGC,IAAI,EAAI;EAClC,IAAI,CAACA,IAAI,EAAE;IACT,OAAO,mBAAmB;EAC5B,CAAC,MAAM,IAAI,CAAC,IAAIC,MAAM,CAAC,cAAc,CAAC,CAACC,IAAI,CAACF,IAAI,CAAC,EAAE;IACjD,OAAO,wBAAwB;EACjC;EACA,OAAO,EAAE;AACX,CAAC;AAED,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiB,CAAGC,QAAQ,EAAI;EAC3C,IAAI,CAACA,QAAQ,EAAE;IACb,OAAO,sBAAsB;EAC/B,CAAC,MAAM,IAAIA,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;IAC9B,OAAO,2CAA2C;EACpD;EACA,OAAO,EAAE;AACX,CAAC;AAGD,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAAwB,CAAIF,QAAQ,EAAEG,IAAI,EAAK;EAC1D,IAAI,CAACC,eAAe,EAAE;IACpB,OAAO,8BAA8B;EACvC,CAAC,MAAM,IAAIA,eAAe,CAACH,MAAM,GAAG,CAAC,EAAE;IACrC,OAAO,mDAAmD;EAC5D,CAAC,MAAM,IAAIG,eAAe,KAAKD,IAAI,CAACH,QAAQ,EAAE;IAC5C,OAAO,wBAAwB;EACjC;EACA,OAAO,EAAE;AACX,CAAC"},"metadata":{},"sourceType":"module"}